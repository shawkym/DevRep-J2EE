/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import java.math.BigDecimal;
import org.openapitools.model.InlineObject4;
import org.openapitools.model.InlineObject5;
import org.openapitools.model.InlineResponse2003;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-02-11T19:11:10.487+01:00[Europe/Paris]")

@Validated
@Api(value = "order", description = "the order API")
public interface OrderApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /order/{orderId} : Delete purchase order by ID
     * For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
     *
     * @param orderId ID of the order that needs to be deleted (required)
     * @return OK (status code 200)
     *         or Invalid ID supplied (status code 400)
     *         or Order not found (status code 404)
     */
    @ApiOperation(value = "Delete purchase order by ID", nickname = "deleteOrder", notes = "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors", tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Order not found") })
    @RequestMapping(value = "/order/{orderId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteOrder(@Min(1L)@ApiParam(value = "ID of the order that needs to be deleted",required=true) @PathVariable("orderId") Long orderId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /order/{orderId} : Find purchase order by ID
     * For valid response try integer IDs with value &gt;&#x3D; 1 and &lt;&#x3D; 10. Other values will generated exceptions
     *
     * @param orderId ID of Conference that needs to be fetched (required)
     * @return successful operation (status code 200)
     *         or Invalid ID supplied (status code 400)
     *         or Order not found (status code 404)
     */
    @ApiOperation(value = "Find purchase order by ID", nickname = "getOrderById", notes = "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", response = InlineResponse2003.class, tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = InlineResponse2003.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Order not found") })
    @RequestMapping(value = "/order/{orderId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2003> getOrderById(@Min(1L) @Max(10L) @ApiParam(value = "ID of Conference that needs to be fetched",required=true) @PathVariable("orderId") Long orderId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"quantity\" : 6, \"form\" : { \"Zip\" : \"Zip\", \"last name\" : \"last name\", \"Email\" : \"Email\", \"first name\" : \"first name\", \"Address\" : \"Address\", \"Phone\" : \"Phone\", \"price\" : \"price\", \"Country\" : \"Country\", \"Institution\" : \"Institution\", \"City\" : \"City\", \"title\" : \"Mr\", \"category\" : \"category\" }, \"price\" : 1.4658129805029452, \"admin\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 0, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" }, { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" } ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 0, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" }, { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" } ], \"lastname\" : \"lastname\" } ], \"id\" : 0, \"shipDate\" : \"2000-01-23T04:56:07.000+00:00\", \"complete\" : false, \"category\" : \"category\", \"Conference\" : { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 0, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" }, \"status\" : \"placed\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<Order> <id>123456789</id> <quantity>123</quantity> <shipDate>2000-01-23T04:56:07.000Z</shipDate> <status>aeiou</status> <complete>true</complete> <price>3.149</price> <category>aeiou</category> </Order>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /order/validate/{orderId} : Validate Order
     * Validates an Order
     *
     * @param orderId  (required)
     * @param orderId2 order Id (optional)
     * @return OK (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "Validate Order", nickname = "getOrderValidateOrderId", notes = "Validates an Order", authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/order/validate/{orderId}",
        method = RequestMethod.GET)
    default ResponseEntity<Void> getOrderValidateOrderId(@ApiParam(value = "",required=true) @PathVariable("orderId") String orderId,@ApiParam(value = "order Id") @Valid @RequestParam(value = "orderId", required = false) BigDecimal orderId2) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /order : Place an order for a Conference
     * Place an order for a Conference
     *
     * @param inlineObject5  (required)
     * @return successful operation (status code 200)
     *         or Invalid Order (status code 400)
     */
    @ApiOperation(value = "Place an order for a Conference", nickname = "placeOrder", notes = "Place an order for a Conference", response = InlineResponse2003.class, tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = InlineResponse2003.class),
        @ApiResponse(code = 400, message = "Invalid Order") })
    @RequestMapping(value = "/order",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2003> placeOrder(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject5 inlineObject5) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"quantity\" : 6, \"form\" : { \"Zip\" : \"Zip\", \"last name\" : \"last name\", \"Email\" : \"Email\", \"first name\" : \"first name\", \"Address\" : \"Address\", \"Phone\" : \"Phone\", \"price\" : \"price\", \"Country\" : \"Country\", \"Institution\" : \"Institution\", \"City\" : \"City\", \"title\" : \"Mr\", \"category\" : \"category\" }, \"price\" : 1.4658129805029452, \"admin\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 0, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" }, { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" } ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 0, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" }, { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 6, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" } ], \"lastname\" : \"lastname\" } ], \"id\" : 0, \"shipDate\" : \"2000-01-23T04:56:07.000+00:00\", \"complete\" : false, \"category\" : \"category\", \"Conference\" : { \"date\" : \"date\", \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 0, \"category\" : [ { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" }, { \"expires\" : \"expires\", \"price\" : 5.962133916683182, \"id\" : 1.4658129805029452, \"category\" : \"category\" } ], \"photos\" : [ \"photos\", \"photos\" ], \"url\" : \"url\", \"admins\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"name\" : \"name\", \"photo\" : \"photo\", \"id\" : 5, \"isAdmin\" : false, \"email\" : \"email\", \"conferences\" : [ null, null ], \"lastname\" : \"lastname\" } ], \"status\" : \"available\" }, \"status\" : \"placed\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<Order> <id>123456789</id> <quantity>123</quantity> <shipDate>2000-01-23T04:56:07.000Z</shipDate> <status>aeiou</status> <complete>true</complete> <price>3.149</price> <category>aeiou</category> </Order>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /order : Updates an order
     * Updates an order  
     *
     * @param inlineObject4  (optional)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Updates an order", nickname = "putOrder", notes = "Updates an order  ", authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/order",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Void> putOrder(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject4 inlineObject4) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
